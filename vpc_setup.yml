- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import all the variables
      include_vars: vars/vpc-vars
    - name: create a VPC with dedicated tenancy and a couple of tags
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpc_cidr}}"
        region: "{{region_name}}"
        dns_support: yes
        dns_hostnames: yes
        state: "{{state}}"
        tenancy: default
      register: "vpcout"
    - name: Create public subnets
      ec2_vpc_subnet:
        state: "{{state}}"
        region: "{{region_name}}"
        az: "{{zone1}}"
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{pubsubnet1}}"
        resource_tags:
          Name: "Public_sub-1"
      register: "subnetout"
    - name: Create public subnets
      ec2_vpc_subnet:
        state: "{{state}}"
        region: "{{region_name}}"
        az: "{{zone2}}"
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{pubsubnet2}}"
        resource_tags:
          Name: "Public_sub-2"
      register: "subnetout2"
    - name: Create public subnets
      ec2_vpc_subnet:
        state: "{{state}}"
        region: "{{region_name}}"
        az: "{{zone3}}"
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{pubsubnet3}}"
        resource_tags:
          Name: "Public_sub-3"
      register: "subnetout3"
    - name: Create private subnets
      ec2_vpc_subnet:
        state: "{{state}}"
        region: "{{region_name}}"
        az: "{{zone1}}"
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{privsubnet1}}"
        resource_tags:
          Name: "Priv_sub-1"
      register: "privsubnetout1"
    - name: Create private subnets
      ec2_vpc_subnet:
        state: "{{state}}"
        region: "{{region_name}}"
        az: "{{zone2}}"
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{privsubnet2}}"
        resource_tags:
          Name: "Priv_sub-2"
      register: "privsubnetout2"
    - name: Create private subnets
      ec2_vpc_subnet:
        state: "{{state}}"
        region: "{{region_name}}"
        az: "{{zone3}}"
        vpc_id: "{{vpcout.vpc.id}}"
        cidr: "{{privsubnet3}}"
        resource_tags:
          Name: "Priv_sub-3"
      register: "privsubnetout3"

    - name: Create internet gateway
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        state: "{{state}}"
        region: "{{region_name}}"
        tags:
          Name: "Vpc-igw"
      register: "igw"

    - name: Set up public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region_name}}"
        tags:
          Name: "Vprofile-route"
        subnets:
          - "{{subnetout.subnet.id}}"
          - "{{subnetout2.subnet.id}}"
          - "{{subnetout3.subnet.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igw.gateway_id}}"
      register: "public_route_table"
    - name: Create new nat gateway and allocate new EIP if a nat gateway does not yet exist in the subnet.
      ec2_vpc_nat_gateway:
        state: present
        subnet_id: "{{subnetout.subnet.id}}"
        wait: yes
        region: "{{region_name}}"
        if_exist_do_not_create: true
      register: "nat_igw"

    - name: Set up public subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region_name}}"
        tags:
           Name: "Vprofile-nat-route"
        subnets:
           - "{{privsubnetout1.subnet.id}}"
           - "{{privsubnetout2.subnet.id}}"
           - "{{privsubnetout3.subnet.id}}"
        routes:
           - dest: 0.0.0.0/0
             gateway_id: "nat-01b70d0612b676c44"
      register: "private_route_table"

    - debug:
        var: "{{item}}"
      loop:
        - vpcout.vpc.id
        - subnetout.subnet.id
        - subnetout2.subnet.id
        - subnetout3.subnet.id
        - privsubnetout1.subnet.id
        - privsubnetout2.subnet.id
        - privsubnetout3.subnet.id
        - igw.gateway_id
        - public_route_table.route_table.id
        - nat_igw.gateway_id
        - private_route_table.route_table

    - set_fact:
         vpc_id: "{{vpcout.vpc.id}}"
         public_sub1: "{{subnetout.subnet.id}}"
         public_sub2: "{{subnetout2.subnet.id}}"
         public_sub3: "{{subnetout3.subnet.id}}"
         private_sub1: "{{privsubnetout1.subnet.id}}"
         private_sub2: "{{privsubnetout2.subnet.id}}"
         private_sub3: "{{privsubnetout3.subnet.id}}"
         internet_gateway: "{{igw.gateway_id}}"
         public_route: "{{public_route_table.route_table.id}}"
         nat_gateway: "{{nat_igw.gateway_id}}"
         private_route: "{{private_route_table.route_table}}"
    - name: copy a file
      copy:
         content: "vpc_id: {{vpcout.vpc.id}}\npublic_sub1: {{subnetout.subnet.id}}\npublic_sub2: {{subnetout2.subnet.id}}\npublic_sub3: {{subnetout3.subnet.id}}\nprivate_sub1: {{privsubnetout1.subnet.id}}\nprivate_sub2: {{privsubnetout2.subnet.id}}\nprivate_sub3: {{privsubnetout3.subnet.id}}\ninternet_gateway: {{igw.gateway_id}}\npublic_route: {{public_route_table.route_table.id}}\nnat_gateway: {{nat_igw.gateway_id}}\nprivate_route: {{private_route_table.route_table}}"
         dest: vars/output_var
